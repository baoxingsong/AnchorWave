cmake_minimum_required(VERSION 3.0)
project(anchorwave)

#include(CheckCXXCompilerFlag)
set(CMAKE_CXX_STANDARD 14)
#
#if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
#    set(MACOSX TRUE)
##else()
##    set(CMAKE_EXE_LINKER_FLAGS "-static-libgcc -static-libstdc++")
#endif()

find_package(ZLIB)

set(CMAKE_CXX_FLAGS " -lm -lz -Wall -g3 -O3 -funroll-all-loops -mavx512bw -mavx512cd -mavx512vl -mavx512f -mavx512dq -mavx2 -msse4.1 -msse4.2 -I ./ -std=gnu++14 -pthread -lrt") # the -mavx* is for GNU compiler and xCORE* are for intel compiler
set(CMAKE_C_FLAGS " -lm -lz -Wall -g3 -O3 -funroll-all-loops -mavx512bw -mavx512cd -mavx512vl -mavx512f -mavx512dq -mavx2 -msse4.1 -msse4.2 -I ./ -pthread -lrt")


#for google unit test
add_subdirectory(./googletest/googletest)
include_directories(googletest/googletest/include googletest/googletest)


add_executable(anchorwave
        googletest
        googletest/googletest
        #       ksw2_extz2_sse.c
#       ksw2.h
#       src/myImportandFunction/alignNeedlemanForTranscript_simd.cpp
        src/model/GenomeBasicFeature.cpp
        src/model/GenomeBasicFeature.h
        src/controlLayer.cpp
        src/controlLayer.h
        src/InputParser.cpp
        src/InputParser.h
        src/model/model.h
        src/util/myutil.cpp
        src/util/myutil.h
        src/util/nucleotideCodeSubstitutionMatrix.cpp
        src/util/nucleotideCodeSubstitutionMatrix.h
        src/util/parameters.cpp
        src/util/parameters.h
        main.cpp
        src/model/variant.cpp
        src/model/variant.h
        src/model/Transcript.cpp
        src/model/Transcript.h
        src/model/Gene.cpp
        src/model/Gene.h
        src/model/Matrix.cpp
        src/model/Matrix.h
        src/model/FirstLastList.cpp
        src/model/FirstLastList.h
        src/model/STRAND.h
        src/model/STRAND.cpp
        src/model/Seed.h
        src/model/Seed.cpp
        src/model/PairedSimilarFragment.cpp
        src/model/PairedSimilarFragment.h
#        src/impl/sequenceAlignment.cpp
#        src/impl/sequenceAlignment.h
        src/impl/impl.h
        src/impl/GetReverseComplementary.cpp
        src/impl/GetReverseComplementary.h
        src/impl/readFastaFile.cpp
        src/impl/readFastaFile.h
        src/util/util.h
        src/impl/getSubsequence.cpp
        src/impl/getSubsequence.h
        src/impl/readGffFile.cpp
        src/impl/readGffFile.h
        src/impl/getSequencesFromGff.cpp
        src/impl/getSequencesFromGff.h
        src/service/service.h
        src/myImportandFunction/myImportantFunction.h
        src/impl/TranscriptUpdateInformation.cpp
        src/impl/TranscriptUpdateInformation.h
        src/tests/impl/test_WFA.cpp
        src/tests/impl/readMafForMsa.cpp
        src/tests/impl/TEGffToAlignment.cpp
        src/tests/impl/readGffFile.cpp
        src/tests/impl/readFastaFile_test.cpp
#        src/tests/impl/CompareSdiAlignmentWithMafFile
        src/service/TransferGffWithNucmerResult.cpp
        src/service/TransferGffWithNucmerResult.h
        src/service/Reformat.cpp
        src/service/Reformat.h
        src/service/callVariantFromSamFile.h
        src/service/callVariantFromSamFile.cpp
        src/myImportandFunction/alignSlidingWindow.cpp
        src/myImportandFunction/alignSlidingWindow.h
        src/impl/CheckAndUpdateTranscriptsEnds.cpp
        src/impl/CheckAndUpdateTranscriptsEnds.h
        src/impl/deNovoGenomeVariantCallingMultipleThreads.cpp
        src/impl/deNovoGenomeVariantCalling.h
        src/impl/WriteFasta.cpp
        src/impl/WriteFasta.h
        src/model/AlignmentMatch.cpp
        src/model/AlignmentMatch.h
        src/model/Score.cpp
        src/model/Score.h
        src/impl/geneSyntenic.cpp
        src/impl/geneSyntenic.h
        src/impl/SequenceCharToUInt8.cpp
        src/impl/SequenceCharToUInt8.h
        WFA/alignment/cigar.c
        WFA/alignment/cigar.h
        WFA/alignment/score_matrix.c
        WFA/alignment/score_matrix.h

        WFA/system/profiler_counter.c
        WFA/system/profiler_counter.h
        WFA/system/profiler_timer.c
        WFA/system/profiler_timer.h
        WFA/system/mm_allocator.c
        WFA/system/mm_allocator.h
        WFA/system/mm_stack.c
        WFA/system/mm_stack.h

        WFA/benchmark/benchmark_edit.h
        WFA/benchmark/benchmark_gap_affine.c
        WFA/benchmark/benchmark_gap_affine.h
        WFA/benchmark/benchmark_gap_lineal.c
        WFA/benchmark/benchmark_gap_lineal.h
        WFA/benchmark/benchmark_utils.c
        WFA/benchmark/benchmark_utils.h
        WFA/benchmark/benchmark_check.c
        WFA/benchmark/benchmark_check.h
        WFA/benchmark/benchmark_gap_affine2p.c
        WFA/benchmark/benchmark_gap_affine2p.h
        WFA/utils/commons.c
        WFA/utils/commons.h
        WFA/utils/dna_text.c
        WFA/utils/dna_text.h
        WFA/utils/string_padded.c
        WFA/utils/string_padded.h
        WFA/utils/vector.c
        WFA/utils/vector.h
        WFA/gap_affine/affine_penalties.c
        WFA/gap_affine/affine_penalties.h
        WFA/gap_affine/affine_matrix.c
        WFA/gap_affine/affine_matrix.h
        WFA/gap_affine/affine_wavefront_align.c
        WFA/gap_affine/affine_wavefront_align.h
        WFA/gap_affine/affine_wavefront_backtrace.c
        WFA/gap_affine/affine_wavefront_backtrace.h
        WFA/gap_affine/affine_wavefront.c
        WFA/gap_affine/affine_wavefront_display.c
        WFA/gap_affine/affine_wavefront_display.h
        WFA/gap_affine/affine_wavefront_extend.c
        WFA/gap_affine/affine_wavefront_extend.h
        WFA/gap_affine/affine_wavefront.h
        WFA/gap_affine/affine_wavefront_penalties.c
        WFA/gap_affine/affine_wavefront_penalties.h
        WFA/gap_affine/affine_wavefront_reduction.c
        WFA/gap_affine/affine_wavefront_reduction.h
        WFA/gap_affine/affine_wavefront_utils.c
        WFA/gap_affine/affine_wavefront_utils.h
        WFA/gap_affine/swg.c
        WFA/gap_affine/swg.h
        WFA/gap_affine/wavefront_stats.c
        WFA/gap_affine/wavefront_stats.h
        WFA/gap_affine2p/affine2p_dp.c
        WFA/gap_affine2p/affine2p_dp.h
        WFA/gap_affine2p/affine2p_matrix.c
        WFA/gap_affine2p/affine2p_matrix.h
        WFA/gap_affine2p/affine2p_penalties.c
        WFA/gap_affine2p/affine2p_penalties.h
        WFA/gap_affine2p/affine2p_wavefront.c
        WFA/gap_affine2p/affine2p_wavefront.h
        WFA/gap_affine2p/affine2p_wavefront_align.c
        WFA/gap_affine2p/affine2p_wavefront_align.h
        WFA/gap_affine2p/affine2p_wavefront_backtrace.c
        WFA/gap_affine2p/affine2p_wavefront_backtrace.h
        WFA/gap_affine2p/affine2p_wavefront_display.c
        WFA/gap_affine2p/affine2p_wavefront_display.h
        WFA/gap_affine2p/affine2p_wavefront_extend.c
        WFA/gap_affine2p/affine2p_wavefront_extend.h
        WFA/gap_lineal/lineal_penalties.h
        WFA/gap_lineal/nw.c
        WFA/gap_lineal/nw.h
        WFA/edit/edit_dp.c
        WFA/edit/edit_dp.h
        WFA/benchmark/benchmark_edit.c
        WFA/benchmark/benchmark_edit.h
        WFA/benchmark/benchmark_gap_affine.c
        WFA/benchmark/benchmark_gap_affine.h
        WFA/benchmark/benchmark_gap_lineal.c
        WFA/benchmark/benchmark_gap_lineal.h
        WFA/benchmark/benchmark_utils.c
        WFA/benchmark/benchmark_utils.h

        minimap2/align.c
        minimap2/bseq.c
        minimap2/chain.c
        minimap2/esterr.c
        minimap2/format.c
        minimap2/hit.c
        minimap2/index.c
        minimap2/kalloc.c
        minimap2/ksw2_dispatch.c
        minimap2/ksw2_extd2_sse.c
        minimap2/ksw2_extd2_avx.c
        minimap2/ksw2_exts2_sse.c
        minimap2/ksw2_extz2_sse.c
        minimap2/ksw2_ll_sse.c
        minimap2/kthread.c
        minimap2/map.c
        minimap2/misc.c
        minimap2/options.c
        minimap2/pe.c
        minimap2/sdust.c
        minimap2/sketch.c
        minimap2/splitidx.c
        minimap2/sse2neon/emmintrin.h
        minimap2/bseq.h
        minimap2/kalloc.h
        minimap2/kdq.h
        minimap2/ketopt.h
        minimap2/khash.h
        minimap2/kseq.h
        minimap2/ksort.h
        minimap2/ksw2.h
        minimap2/kthread.h
        minimap2/kvec.h
        minimap2/minimap.h
        minimap2/mmpriv.h
        minimap2/sdust.h
#
#        ksw2/kalloc.h
#        ksw2/kseq.h
#        ksw2/ksw2.h
#//        ksw2/cli.c
#        ksw2/kalloc.c
#        ksw2/ksw2_extd2_sse.c
#        ksw2/ksw2_extd.c
#        ksw2/ksw2_extf2_sse.c
#        ksw2/ksw2_exts2_sse.c
#        ksw2/ksw2_extz2_sse.c
#        ksw2/ksw2_extz.c
#        ksw2/ksw2_gg2.c
#        ksw2/ksw2_gg2_sse.c
#        ksw2/ksw2_gg.c

        src/service/Reformat.cpp src/service/Reformat.h src/service/evaluation.cpp src/service/evaluation.h src/version.h src/service/callVariantFromSamFile.h src/model/BlocksForMsa.cpp src/model/BlocksForMsa.h src/impl/readMafForMsa.cpp src/impl/readMafForMsa.h src/model/AlignmentBlock.cpp src/model/AlignmentBlock.h src/model/PhylogeneticTreeNode.cpp src/model/PhylogeneticTreeNode.h src/model/PhylogeneticTree.cpp src/model/PhylogeneticTree.h src/tests/model/PhylogeneticTree.cpp src/service/TreeManip.cpp src/service/TreeManip.h src/impl/reconstructAncestorUsingThree.cpp src/impl/reconstructAncestorUsingThree.h src/model/Range.cpp src/model/Range.h src/model/TwoVectorsOfRanges.cpp src/model/TwoVectorsOfRanges.h)

target_link_libraries(anchorwave gtest gtest_main ZLIB::ZLIB)

install(TARGETS anchorwave DESTINATION bin)
install(FILES configure DESTINATION bin)
